#! /usr/bin/env perl
use strict;
use warnings;

use Plack::Runner;
use Plack::Builder;
use Plack::App::Directory;

use Plack::MiddlewareX::PreZipped;
use Plack::MiddlewareX::HttpRangeBytes;

=head1 NAME

plack_serve - serve a directory of static files using Plack

=head1 SYNOPSIS

 $ plack_serve ~/www/site
 HTTP::Server::PSGI: Accepting connections at http://0:5000/
 [... access_log follows ...]

=head1 DESCRIPTION

This is a basic server for static files, implemented with pieces of
L<Plack> and two extra L<Plack::Middleware> modules to deal with
pre-zipped content and byte-range requests.

It is enough to serve L<JBrowse|http://jbrowse.org/> v1.11.6 as I had
it configured.

=head1 CAVEATS

This code is a quick bodge.

=cut


sub main {
  # Taint.  /usr/bin/env can't do it for us.
  exec $^X, (map {( -I => $_)} @INC), -T => $0, @ARGV unless ${^TAINT};

  # app.psgi
  my ($root) = (shift @ARGV) =~ /^(.*)$/;  # untaint - we trust ARGV
  die "Syntax: $0 <webroot-dir> [... plackup args ]\n\nServe a directory via plackup.  root=$root\n"
    unless defined $root && -d $root && -r _;
  my $content = Plack::App::Directory->new({ root => $root })->to_app;

  # headers for pre-compressed files
  my $app = builder {
    enable 'Plack::MiddlewareX::PreZipped';
    enable 'Plack::MiddlewareX::HttpRangeBytes';
    $content;
  };

  # bin/plackup
  my $runner = Plack::Runner->new(app => $app);
  $runner->parse_options(@ARGV);
  $runner->run;

  return 0;
}

exit main();
